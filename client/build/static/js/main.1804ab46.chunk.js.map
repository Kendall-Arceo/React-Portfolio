{"version":3,"sources":["Components/Layouts/Header.js","Pages/LandingPage.js","App.js","registerServiceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","appBar","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","width","concat","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","Object","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","PersistentDrawerLeft","classes","useTheme","_React$useState","React","useState","_React$useState2","slicedToArray","open","setOpen","react_default","a","createElement","className","CssBaseline","AppBar","position","clsx","defineProperty","Toolbar","IconButton","color","aria-label","onClick","edge","Menu_default","Typography","variant","noWrap","Drawer","anchor","paper","direction","ChevronLeft_default","ChevronRight_default","Divider","List","map","text","index","ListItem","button","key","ListItemIcon","MoveToInbox_default","Mail_default","ListItemText","primary","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","type","grey","backgroundSize","backgroundPosition","margin","flexDirection","avatar","secondary","main","LandingPage","Grid","container","component","App","createMuiTheme","purple","red","ThemeProvider","App_App","react","react_router_dom","react_router","exact","path","components","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.1804ab46.chunk.js","sourcesContent":["import React from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create(['margin', 'width'], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  hide: {\r\n    display: 'none',\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: 'flex-end',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create('margin', {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nexport default function PersistentDrawerLeft() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Header with hidden drawer\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        <List>\r\n          {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n        <Divider />\r\n        <List>\r\n          {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n            <ListItem button key={text}>\r\n              <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n              <ListItemText primary={text} />\r\n            </ListItem>\r\n          ))}\r\n        </List>\r\n      </Drawer>\r\n      \r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Header from '../Components/Layouts/Header';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/random)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'auto',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  \r\n}));\r\n\r\nexport default function LandingPage() {\r\n  const classes = useStyles();\r\n  \r\n  return (\r\n\r\n    <Grid container component =\"main\" className={classes.root}>\r\n        <CssBaseline />\r\n        <Header />\r\n    </Grid>\r\n    \r\n  );\r\n}","import React, { Fragment } from \"react\";\nimport LandingPage from './Pages/LandingPage'\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport {purple, red,} from \"@material-ui/core/colors\";\nimport { BrowserRouter as Router, Route, Switch, } from \"react-router-dom\";\nimport \"./App.css\";\n\n\nfunction App (){\n  const theme = createMuiTheme({\n    palette: {\n      primary: {\n        main:purple[800],\n      },\n      secondary: {\n        main: red[900],\n      },\n      \n    },\n  });  \n\n\n  return (\n  \n  <ThemeProvider theme = {theme}>\n    <App>\n      <Fragment> \n        <Router>\n\n          \n\n          <Switch>\n            <Route exact path = {\"/\"}>\n              <LandingPage components = {LandingPage} />\n            </Route>\n          </Switch>\n        \n\n        </Router>\n\n        \n\n      </Fragment>\n    </App>\n  </ThemeProvider>\n    \n  \n  )\n  \n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}